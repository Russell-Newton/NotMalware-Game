plugins {
    id 'java'

    // Add checkstyle plugin for checking with Gradle
    id 'checkstyle'

    // Add openjfx to project
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'

    // Add jlink to project (allows for creation of modular project
    id 'org.beryx.jlink' version '2.23.1'
}

// Declare JDK/JRE compatibilities
sourceCompatibility = "11"
targetCompatibility = "11"
group "whatexe"

// Application configuration
ext {
    appName = "What.exe Dungeon Crawler"
    appLauncher = "whatexe-dungeon-crawler"
    appPackaging = "whatexe-dungeon-crawler"
    appModuleName = "whatexe.dungeoncrawler"
    appMainClass = "whatexe.dungeoncrawler.MainApp"
}

mainClassName = "${appModuleName}/${appMainClass}"

// Required for :run because of a bug within modularity that causes a consistent crash
modularity.disableEffectiveArgumentsAdjustment()

repositories {
    mavenCentral()
}

// Define version and dependencies for openjfx
javafx {
    version = "15.0.1"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.media']
}

checkstyle {
    configFile file('cs2340_checks.xml')
    toolVersion '8.24'
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

// Creates project as an extension of the compiling JDK/JRE. Can be used for distribution
jlink {
    imageZip = project.file("${buildDir}/distributions/${appPackaging}-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = "${appLauncher}"
        noConsole = true
    }
}

// Can be combined with run to create a clean dist and run
task dist {
    dependsOn clean, jlinkZip
    description "Calls clean and then jlinkZip [default]"
}

defaultTasks 'dist'
