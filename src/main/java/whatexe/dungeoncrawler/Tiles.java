package whatexe.dungeoncrawler;

import javafx.embed.swing.SwingFXUtils;
import javafx.scene.image.Image;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.Buffer;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class Tiles{
    Map<Coordinate, BufferedImage> tileSet;
    BufferedImage tilesetImage;
    private final int TILESIZE = 32;


    public Tiles(String url) throws IOException {
        tilesetImage = ImageIO.read(new File(url));
        int tileColumns = tilesetImage.getWidth() / TILESIZE;
        int tileRows = tilesetImage.getHeight() / TILESIZE;
        tileSet = new HashMap<>();

        for (int i = 0; i < tileRows; i++) {
            for (int j = 0; j < tileColumns; j++) {
                tileSet.put(new Coordinate(j, i),
                            tilesetImage.getSubimage(j * TILESIZE, i * TILESIZE, TILESIZE, TILESIZE));
            }
        }
    }

    public Image getTile(Coordinate coordinate) {
        BufferedImage image= tileSet.get(coordinate);
        return SwingFXUtils.toFXImage(image, null);
    }

    public Image getRandFloorTile() {
        ArrayList<Coordinate> floorTypes = new ArrayList<>();
        floorTypes.add(new Coordinate(8, 5));
        floorTypes.add(new Coordinate(9, 5));
        floorTypes.add(new Coordinate(10, 5));
        floorTypes.add(new Coordinate(11, 5));
        floorTypes.add(new Coordinate(12, 5));
        floorTypes.add(new Coordinate(13, 5));
        floorTypes.add(new Coordinate(8, 6));
        floorTypes.add(new Coordinate(9, 6));
        floorTypes.add(new Coordinate(10, 6));
        floorTypes.add(new Coordinate(11, 6));
        floorTypes.add(new Coordinate(12, 6));
        floorTypes.add(new Coordinate(13, 6));
        int randex = (int) (Math.random() * floorTypes.size());

        return getTile(floorTypes.get(randex));
    }
}
