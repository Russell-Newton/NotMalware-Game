package whatexe.dungeoncrawler.controllers;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.ComboBox;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.text.Text;
import javafx.stage.Modality;
import whatexe.dungeoncrawler.Difficulty;
import whatexe.dungeoncrawler.MainApp;
import whatexe.dungeoncrawler.ManagedController;
import whatexe.dungeoncrawler.SceneManager;

import java.io.IOException;
import java.util.Map;

public class ConfigurationController extends ManagedController {
    @FXML
    private TextField nameInput;
    @FXML
    private RadioButton easyButton;
    @FXML
    private RadioButton normalButton;
    @FXML
    private RadioButton hardButton;
    @FXML
    private ComboBox weaponChoice;
    @FXML
    private Text weaponDesciption;

    @Override
    public void init() {
        SceneManager.getInstance().addScene("Level",
                                            getClass().getResource("LevelDisplay.fxml"));
    }

    @FXML
    protected void proceed() throws IOException {
        if (!isValidName(nameInput.getText())) {
            Alert noName = new Alert(Alert.AlertType.ERROR);
            noName.setHeaderText("Try Again");
            noName.setTitle("No Name input");
            noName.setContentText("Name cannot be empty");
            noName.initModality(Modality.WINDOW_MODAL);
            noName.initOwner(MainApp.getPrimaryStage());
            noName.showAndWait();
        } else {
            //to room 1
            MainApp.switchScene("Level", Map.of(
                    "difficulty", getDifficulty(),
                    "name", nameInput.getText(),
                    "weapon", weaponChoice.getValue()));

        }
    }

    private static boolean isValidName(String name) {
        return !(name == null || name.trim().equals(""));
    }

    private Difficulty getDifficulty() {
        if (easyButton.isSelected()) {
            return Difficulty.EASY;

        }
        if (hardButton.isSelected()) {
            return Difficulty.HARD;
        }
        return Difficulty.NORMAL;
    }

    @FXML
    protected void changeWeaponDesciption(ActionEvent event) {
        if (weaponChoice.getValue().equals("Melee")) {
            weaponDesciption.setText("Punch your enemies aggressively!! Be careful tho, you'll "
                                             + "have to be up close");
        } else if (weaponChoice.getValue().equals("Arrow")) {
            weaponDesciption.setText("The classic bow and arrow. Aim and shoot, make sure you "
                                             + "don't miss!!");
        } else if (weaponChoice.getValue().equals("Laser gun")) {
            weaponDesciption.setText("Very fast gun. Guaranteed to hit, but shame it does less "
                                             + "damage (it shoots peas...why? idk)");
        } else if (weaponChoice.getValue().equals("Worm")) {
            weaponDesciption.setText("Spread a logic plague to your enemies.");
        } else if (weaponChoice.getValue().equals("Trojan")) {
            weaponDesciption.setText("Walk among your foes unseen.");
        } else {
            weaponDesciption.setText("Please select a weapon");
        }
    }
}
