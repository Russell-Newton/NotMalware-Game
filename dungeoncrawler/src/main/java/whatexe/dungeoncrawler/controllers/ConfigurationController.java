package whatexe.dungeoncrawler.controllers;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.ComboBox;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.text.Text;
import whatexe.dungeoncrawler.ManagedController;
import whatexe.dungeoncrawler.SceneManager;

public class ConfigurationController extends ManagedController {
    @FXML private TextField nameInput;
    @FXML private RadioButton easyButton;
    @FXML private RadioButton normalButton;
    @FXML private RadioButton hardButton;
    @FXML private ComboBox weaponChoice;
    @FXML private Text weaponDesciption;

    @Override
    public void init() {
//        SceneManager.getInstance().addScene("Configuration",
//                getClass().getResource("Configuration.fxml"));
//        // Recommended setup
//        System.out.println("Initialized Configuration Screen");
    }

    @FXML
    protected void proceed(ActionEvent event) {
        if (nameInput.getText() == null || nameInput.getText().equals("")) {
            Alert noName = new Alert(Alert.AlertType.ERROR);
            noName.setHeaderText("Try Again");
            noName.setTitle("No Name input");
            noName.setContentText("Name cannot be empty");
            noName.showAndWait();
        } else {
            setName(nameInput.getText());
            selectDifficulty(easyButton, normalButton, hardButton);
            weapon((String) weaponChoice.getValue());
            //to room 1
        }
    }

    @FXML
    protected void changeWeaponDesciption(ActionEvent event) {
        if (weaponChoice.getValue().equals("Melee")) {
            weaponDesciption.setText("Punch your enemies aggressively!! Be careful tho, you'll "
                                             + "have to be up close");
        } else if (weaponChoice.getValue().equals("Arrow")) {
            weaponDesciption.setText("The classic bow and arrow. Aim and shoot, make sure you "
                                             + "don't miss!!");
        } else if (weaponChoice.getValue().equals("Laser gun")) {
            weaponDesciption.setText("Very fast gun. Guaranteed to hit, but shame it does less "
                                             + "damage (it shoots peas...why? idk)");
        } else {
            weaponDesciption.setText("Please select a weapon");
        }
    }

    private String setName(String name) {
        return name;
    }

    private String selectDifficulty(RadioButton easy, RadioButton normal, RadioButton hard) {
        if (easy.isSelected()) {
            return "easy";

        }
        if (hard.isSelected()) {
            return "hard";
        }
        return "normal";
    }

    private String weapon(String weapon) {
        return weapon;
    }
}
