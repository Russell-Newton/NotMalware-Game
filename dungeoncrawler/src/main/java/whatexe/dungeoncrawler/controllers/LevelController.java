package whatexe.dungeoncrawler.controllers;

import javafx.fxml.FXML;
import whatexe.dungeoncrawler.ManagedController;
import whatexe.dungeoncrawler.SceneManager;
import whatexe.dungeoncrawler.layout.Level;
import whatexe.dungeoncrawler.layout.Room;
import whatexe.dungeoncrawler.entities.Player;

public class LevelController extends ManagedController {
    /*
    TODO - For Jun:
        - Player reference should be initialized based on whatever difficulty is passed into the
            init(Map) method.
        - FXML should have display representations for Player health and money.
        - FXML representations should update with Player health and money SimpleIntegerProperties
            (a binding is your best bet).

    TODO - For Chase and Russell:
        - Controller should have a method to change currentRoom and handle necessary behavior.

    TODO - For Gabe and Allison:
        - FXML should have a SubScene object for rendering Rooms and entities (doesn't
            necessarily need a reference in this Controller, because of the currentRoomSceneName
            String).
        - Should have methods for spawning entities into the SubScene.
            Could make use of ManagedController::setState(Map) and SceneManager::setSceneState(Map)
            methods, using the currentRoomSceneName String. This avoids the need for casting.
     */
    private Level level = new Level();

    @FXML
    protected String currentRoomSceneName;

    protected Player player;
    protected Room currentRoom;

    @Override
    public void init() {
        //initialize Level
        level.currentRoomProperty().addListener((observer, oldValue, newValue) -> updateRoom());
    }

    public void updateRoom() {
        Room nextRoom = level.getCurrentRoom();
    }
}
