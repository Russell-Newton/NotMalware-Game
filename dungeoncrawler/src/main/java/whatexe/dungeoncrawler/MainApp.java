package whatexe.dungeoncrawler;

import javafx.application.Application;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.stage.Stage;

import java.io.IOException;
import java.net.URL;
import java.util.Map;

public class MainApp extends Application {

    private static Stage primaryStage;
    private static String currentScene;
    private static MediaPlayer musicPlayer;

    public static void main(String[] args) {
        launch(args);
    }

    /**
     * Switches to a new scene. Loads the new scene and unloads the current (if present) scene.
     *
     * @param sceneName the name of the new scene, as held in the {@link SceneManager}.
     * @throws IOException if the FXML file saved in the {@link SceneManager} cannot be loaded.
     * @see MainApp#switchScene(String, Map)
     * @see SceneManager
     * @see SceneManager#loadScene(String)
     * @see SceneManager#unloadScene(String)
     */
    public static void switchScene(String sceneName) throws IOException {
        switchScene(sceneName, Map.of());
    }

    /**
     * Switches to a new scene. Loads the new scene and unloads the current (if present) scene.
     *
     * @param sceneName      the name of the new scene, as held in the {@link SceneManager}.
     * @param loadParameters optional parameters passed into the {@link ManagedController}'s
     *                       {@link ManagedController#init} method.
     * @throws IOException if the FXML file saved in the {@link SceneManager} cannot be loaded.
     * @see SceneManager
     * @see SceneManager#loadScene(String, Map)
     * @see SceneManager#unloadScene(String)
     * @see ManagedController#init(Map)
     */
    public static void switchScene(String sceneName, Map<String, Object> loadParameters)
            throws IOException {
        if (currentScene != null) {
            SceneManager.getInstance().unloadScene(currentScene);
        }
        currentScene = sceneName;

        // Set the primaryStage scene to the new scene
        primaryStage.setScene(SceneManager.getInstance().loadScene(sceneName, loadParameters));
        SceneManager.getInstance().getSceneController(sceneName).postInit();

        primaryStage.centerOnScreen();
    }

    public static Stage getPrimaryStage() {
        return primaryStage;
    }

    public static String getCurrentScene() {
        return currentScene;
    }

    public static void setMusicTrack(URL fileLocation) {
        if (musicPlayer != null) {
            musicPlayer.dispose();
        }
        musicPlayer = new MediaPlayer(new Media(fileLocation.toString()));
        musicPlayer.setCycleCount(Integer.MAX_VALUE);
    }

    public static void playCurrentMusicTrack() {
        assert musicPlayer != null;
        if (musicPlayer.getStatus() != MediaPlayer.Status.READY
                && musicPlayer.getStatus() != MediaPlayer.Status.STOPPED
                && musicPlayer.getStatus() != MediaPlayer.Status.PAUSED) {
            throw new RuntimeException("Cannot play music! Current status not READY, STOPPED, or "
                                               + "PAUSED: " + musicPlayer.getStatus());
        }
        musicPlayer.play();
    }

    public static void stopCurrentMusicTrack() {
        assert musicPlayer != null;
        if (musicPlayer.getStatus() != MediaPlayer.Status.PLAYING
                && musicPlayer.getStatus() != MediaPlayer.Status.PAUSED) {
            throw new RuntimeException("Cannot stop music! Current status not PLAYING or "
                                               + "PAUSED: " + musicPlayer.getStatus());
        }
        musicPlayer.stop();
    }

    public static void pauseCurrentMusicTrack() {
        assert musicPlayer != null;

        if (musicPlayer.getStatus() != MediaPlayer.Status.STALLED
                && musicPlayer.getStatus() != MediaPlayer.Status.STOPPED
                && musicPlayer.getStatus() != MediaPlayer.Status.PLAYING) {
            throw new RuntimeException("Cannot play music! Current status not STALLED, STOPPED, or "
                                               + "PLAYING: " + musicPlayer.getStatus());
        }
        musicPlayer.pause();
    }

    public static MediaPlayer getMusicPlayer() {
        return musicPlayer;
    }

    @Override
    public void start(Stage primaryStage) throws IOException {
        // Scene root = new Scene(new AnchorPane(), 600, 600);
        SceneManager.getInstance().
                addScene("Welcome Screen",
                         getClass().getResource("controllers/WelcomeScreen.fxml"));

        MainApp.primaryStage = primaryStage;
        currentScene = null;
        primaryStage.setTitle("What.exe Dungeon Crawler");

        switchScene("Welcome Screen");

        primaryStage.setResizable(false);
        primaryStage.show();
    }
}
