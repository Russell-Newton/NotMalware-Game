package whatexe.dungeoncrawler.entities;

import javafx.beans.property.SimpleIntegerProperty;
import javafx.scene.Node;

public abstract class Enemy extends Entity {
    /*
    TODO - For Gabe and Allison:
        - Enable movement? Consider setting up an AnimationTimer that moves an Enemy back and
            forth on a fixed path.
            Movement should start only when added to the SubScene.
        - Consider implementing a way for creating an entity that can be used to damage a Player
            (A melee/ranged attack entity can be used to keep transfer damage, instead of keeping
            track of the Player inside of this Enemy object).
        - These implementations could be abstract and delegated to Enemy subclasses (each with
            different movement patterns and attack styles).
     */

    private final SimpleIntegerProperty health;

    public Enemy(Node displayNode, int startingHealth) {
        super(displayNode);
        canTick = true;

        health = new SimpleIntegerProperty(startingHealth);
    }

    public SimpleIntegerProperty healthProperty() {
        return health;
    }

    public void setHealth(int health) {
        this.health.set(health);
    }

    public void adjustHealth(int dHealth) {
        health.set(health.getValue() + dHealth);
    }

    @Override
    public void tick(long now) {
        int dx = (int) (Math.random() * 3) - 1;
        int dy = (int) (Math.random() * 3) - 1;
        moveNode(dx, dy);
    }

    /**
     * Enemy will attack something by creating an entity.
     *
     * @return damage done to what enemy is attacking
     */
    public abstract SimpleIntegerProperty attack();
}
