package whatexe.dungeoncrawler.entities;

import javafx.animation.AnimationTimer;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.scene.Node;

public abstract class Enemy extends Entity {
    /*
    TODO - For Gabe and Allison:
        - Enable movement? Consider setting up an AnimationTimer that moves an Enemy back and
            forth on a fixed path.
            Movement should start only when added to the SubScene.
        - Consider implementing a way for creating an entity that can be used to damage a Player
            (A melee/ranged attack entity can be used to keep transfer damage, instead of keeping
            track of the Player inside of this Enemy object).
        - These implementations could be abstract and delegated to Enemy subclasses (each with
            different movement patterns and attack styles).
     */

    private final SimpleIntegerProperty health;
    private AnimationTimer timer;

    public Enemy(Node displayNode, int startingHealth) {
        super(displayNode);
        health = new SimpleIntegerProperty(startingHealth);
        timer = new AnimationTimer() {
            @Override
            public void handle(long now) {
                int dx = 0, dy = 0;
                if (isDisplayed) {
                    dx += (int) (Math.random() * 2) - 1;
                    dy += (int) (Math.random() * 2) - 1;
                }
                move(dx, dy);
            }
        };
        timer.start();
    }

    public SimpleIntegerProperty healthProperty() {
        return health;
    }

    public void setHealth(int health) {
        this.health.set(health);
    }

    public void adjustHealth(int dHealth) {
        health.set(health.getValue() + dHealth);
    }

    public void move(int dx, int dy) {
        double x = displayNode.getBoundsInLocal().getWidth()  / 2;
        double y = displayNode.getBoundsInLocal().getHeight()  / 2;
        displayNode.relocate(x - dx, y - dy);
    }
}
