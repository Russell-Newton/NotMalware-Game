package whatexe.dungeoncrawler.entities.behavior.movement;

import javafx.beans.property.SimpleDoubleProperty;
import whatexe.dungeoncrawler.entities.Entity;
import whatexe.dungeoncrawler.entities.motionsupport.Vector;

import java.util.function.Supplier;

public class GravitationalFollowingBehavior extends FollowingBehavior {

    private final GravitationalFollowingParameters parameters;
    private Vector currentMovement;

    public GravitationalFollowingBehavior(Entity owningEntity,
                                          Supplier<Entity> targetSupplier,
                                          GravitationalFollowingParameters parameters) {
        super(owningEntity, targetSupplier, 0);

        this.parameters = parameters;
        speedProperty().bind(parameters.vMax);
        currentMovement = new Vector(0, 0);
    }

    @Override
    public Vector getMovement() {
        Vector superMovement = super.getMovement();
        if (superMovement.isZero()) {
            return superMovement;
        }

        if (currentMovement.isZero()) {
            currentMovement = superMovement;
            return currentMovement;
        }

        Vector toTarget = toTarget();
        double r = toTarget.magnitude();
        Vector pull = toTarget.unit().scaledBy(parameters.getPullMultiplier() / (r * r));
        Vector motion = currentMovement.plus(pull);

        currentMovement = motion.unit().scaledBy(parameters.getvMax());

        return currentMovement;
    }

    public static class GravitationalFollowingParameters {
        private final SimpleDoubleProperty vMax;
        private final SimpleDoubleProperty pullMultiplier;

        public GravitationalFollowingParameters(double vMax,
                                                double pullMultiplier) {
            this.vMax = new SimpleDoubleProperty(vMax);
            this.pullMultiplier = new SimpleDoubleProperty(pullMultiplier);
        }

        public double getvMax() {
            return vMax.get();
        }

        public void setvMax(double vMax) {
            this.vMax.set(vMax);
        }

        public SimpleDoubleProperty vMaxProperty() {
            return vMax;
        }

        public double getPullMultiplier() {
            return pullMultiplier.get();
        }

        public SimpleDoubleProperty pullMultiplierProperty() {
            return pullMultiplier;
        }

        public void setPullMultiplier(double pullMultiplier) {
            this.pullMultiplier.set(pullMultiplier);
        }
    }
}
