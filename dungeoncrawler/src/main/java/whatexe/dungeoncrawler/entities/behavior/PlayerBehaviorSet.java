package whatexe.dungeoncrawler.entities.behavior;

import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import whatexe.dungeoncrawler.MainApp;
import whatexe.dungeoncrawler.entities.Player;
import whatexe.dungeoncrawler.entities.behavior.attack.PlayerAttackBehavior;
import whatexe.dungeoncrawler.entities.behavior.death.PlayerDeathBehavior;
import whatexe.dungeoncrawler.entities.behavior.movement.PlayerMovementBehavior;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;

import static javafx.scene.input.KeyCode.*;

public class PlayerBehaviorSet extends BehaviorSet {
    /**
     * A map of key bindings, mapped to boolean {@link Consumer}s. The Consumers receive true if
     * the key was pressed and false if the key was released.
     */
    private final Map<KeyCode, Consumer<Boolean>> keyBindings;

    public PlayerBehaviorSet(Player owner) {
        super(new PlayerAttackBehavior(owner),
              new PlayerMovementBehavior(owner),
              new PlayerDeathBehavior(owner));

        keyBindings = new HashMap<>();
    }

    public PlayerBehaviorSet(Player owner, int attackDamage) {
        super(new PlayerAttackBehavior(owner, attackDamage),
              new PlayerMovementBehavior(owner),
              new PlayerDeathBehavior(owner));

        keyBindings = new HashMap<>();
    }

    public PlayerBehaviorSet(Player owner, double speed) {
        super(new PlayerAttackBehavior(owner),
              new PlayerMovementBehavior(owner, speed),
              new PlayerDeathBehavior(owner));

        keyBindings = new HashMap<>();
    }

    public PlayerBehaviorSet(Player owner, double speed, int attackDamage) {
        super(new PlayerAttackBehavior(owner, attackDamage),
              new PlayerMovementBehavior(owner, speed),
              new PlayerDeathBehavior(owner));

        keyBindings = new HashMap<>();
    }

    public void initControls() {
        PlayerMovementBehavior movementBehavior = (PlayerMovementBehavior) getMovementBehavior();
        PlayerAttackBehavior attackBehavior = (PlayerAttackBehavior) getAttackBehavior();

        keyBindings.put(UP, movementBehavior::setGoingUp);
        keyBindings.put(W, movementBehavior::setGoingUp);
        keyBindings.put(DOWN, movementBehavior::setGoingDown);
        keyBindings.put(S, movementBehavior::setGoingDown);
        keyBindings.put(LEFT, movementBehavior::setGoingLeft);
        keyBindings.put(A, movementBehavior::setGoingLeft);
        keyBindings.put(RIGHT, movementBehavior::setGoingRight);
        keyBindings.put(D, movementBehavior::setGoingRight);

        keyBindings.put(SPACE, attackBehavior::setAttacking);

        MainApp.getPrimaryStage().getScene().addEventFilter(KeyEvent.KEY_PRESSED, (event) -> {
            try {
                keyBindings.get(event.getCode()).accept(true);
            } catch (NullPointerException ignored) {
            }
        });

        MainApp.getPrimaryStage().getScene().addEventFilter(KeyEvent.KEY_RELEASED, (event) -> {
            try {
                keyBindings.get(event.getCode()).accept(false);
            } catch (NullPointerException ignored) {
            }
        });
    }
}
