package whatexe.dungeoncrawler.entities.behavior.movement;

import javafx.beans.property.SimpleDoubleProperty;
import javafx.geometry.Bounds;
import whatexe.dungeoncrawler.entities.Entity;
import whatexe.dungeoncrawler.entities.behavior.EntityBehavior;
import whatexe.dungeoncrawler.entities.motionsupport.Vector;

import java.util.List;
import java.util.function.Supplier;

public class GravitationalPullingBehavior extends EntityBehavior<Entity> implements MovementBehavior {

    private final Supplier<List<Entity>> targetsSupplier;
    private final GravitationalFollowingParameters parameters;
    private Vector currentMovement;

    public GravitationalPullingBehavior(Entity owningEntity,
                                        Supplier<List<Entity>> targetsSupplier,
                                        Vector initialMovement,
                                        GravitationalFollowingParameters parameters) {
        super(owningEntity);

        this.targetsSupplier = targetsSupplier;
        this.parameters = parameters;
        currentMovement = initialMovement;
    }

    @Override
    public Vector getMovement() {
        List<Entity> targets = targetsSupplier.get();
        if (targets.size() == 0) {
            return currentMovement;
        }

        Vector pull = new Vector(0, 0);

        for (Entity target : targets) {
            Vector toTarget = owningEntity.vectorToOtherEntity(target);
            double r = toTarget.magnitude();
            pull = pull.plus(toTarget.unit().scaledBy(parameters.getPullMultiplier() / (r * r)));
        }
        Vector motion = currentMovement.plus(pull);

        currentMovement = motion.unit().scaledBy(parameters.getvMax());

        return currentMovement;
    }

    public static class GravitationalFollowingParameters {
        private final SimpleDoubleProperty vMax;
        private final SimpleDoubleProperty pullMultiplier;

        public GravitationalFollowingParameters(double vMax,
                                                double pullMultiplier) {
            this.vMax = new SimpleDoubleProperty(vMax);
            this.pullMultiplier = new SimpleDoubleProperty(pullMultiplier);
        }

        public double getvMax() {
            return vMax.get();
        }

        public void setvMax(double vMax) {
            this.vMax.set(vMax);
        }

        public SimpleDoubleProperty vMaxProperty() {
            return vMax;
        }

        public double getPullMultiplier() {
            return pullMultiplier.get();
        }

        public SimpleDoubleProperty pullMultiplierProperty() {
            return pullMultiplier;
        }

        public void setPullMultiplier(double pullMultiplier) {
            this.pullMultiplier.set(pullMultiplier);
        }
    }
}
