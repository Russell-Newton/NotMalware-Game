package whatexe.dungeoncrawler.entities;

import javafx.collections.ObservableList;
import javafx.scene.Node;
import javafx.scene.shape.Shape;
import whatexe.dungeoncrawler.layout.Direction;
import whatexe.dungeoncrawler.layout.Level;
import whatexe.dungeoncrawler.layout.Room;

public abstract class Door extends Entity implements PlayerOverlappable {
    protected final Level owningLevel;
    protected final Direction direction;

    public Door(Node displayNode, Level owningLevel, Direction direction, Shape hitbox,
                Room owningRoom) {
        super(displayNode, hitbox, owningRoom);
        this.owningLevel = owningLevel;
        this.direction = direction;
        initListeners();
    }

    public Door(Node displayNode, Level owningLevel, Direction direction, Room owningRoom) {
        super(displayNode, owningRoom);
        this.owningLevel = owningLevel;
        this.direction = direction;
        initListeners();
    }

    /**
     * Initialize listeners for the door, like the ones that react to the Player overlapping the
     * displayNode.
     */
    protected abstract void initListeners();

    /**
     * When given a list of doors, it will return the first door in that list with the direction
     * specified
     *
     * @param doors     List of doors to search through
     * @param direction The direction of the returning door
     * @return The door from the list with the specified direction
     */
    public static Door getDoorFromList(ObservableList<Door> doors, Direction direction) {
        for (Door door : doors) {
            if (door.direction == direction) {
                return door;
            }
        }
        return null;
    }

    @Override
    public void handleOverlap(Player player) {
        // Move to next room
        owningLevel.move(direction);
        System.out.println(this + " Overlapping player " + direction);
    }

}
