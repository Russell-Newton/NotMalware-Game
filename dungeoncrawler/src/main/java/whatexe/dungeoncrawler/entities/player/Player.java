package whatexe.dungeoncrawler.entities.player;

import javafx.beans.property.SimpleIntegerProperty;
import javafx.scene.layout.Pane;
import whatexe.dungeoncrawler.SceneManager;
import whatexe.dungeoncrawler.controllers.InventoryController;
import whatexe.dungeoncrawler.entities.behavior.EntityStatistics;
import whatexe.dungeoncrawler.entities.behavior.presets.PlayerBehaviorSet;
import whatexe.dungeoncrawler.entities.friends.Friend;
import whatexe.dungeoncrawler.layout.rooms.Room;


public class Player extends Friend {

    private final Inventory inventory;
    private final SimpleIntegerProperty money;
    private final MalwareType malwareType;
    private boolean isInventoryOpen = false;


    public Player(MalwareType malwareType) {
        super(malwareType.getDefaultSprite(), null, malwareType.getDefaultStatModifiers());
        canTick = true;

        money = new SimpleIntegerProperty();
        inventory = new Inventory(this);
        this.malwareType = malwareType;

        entityStatistics.setSpeed(2);

        behaviorSet.set(malwareType.getDefaultBehaviorSet(this));

    }

    public static EntityStatistics getDefaultPlayerStatistics() {
        return new EntityStatistics(50,
                                    5,
                                    50,
                                    2,
                                    1,
                                    1,
                                    1);
    }

    public void operateInventory() {
        if (!isInventoryOpen) {
            getOwningRoom().stopTicking();
            isInventoryOpen = true;
            ((InventoryController) SceneManager
                    .getInstance().getSceneController("Inventory")).update();
            ((Pane) SceneManager.getInstance().getParent("Level"))
                    .getChildren().add(inventory.getPane());
        } else {
            getOwningRoom().startTicking();
            isInventoryOpen = false;
            ((Pane) SceneManager.getInstance().getParent("Level"))
                    .getChildren().remove(inventory.getPane());
        }
    }

    public void initControls() {
        ((PlayerBehaviorSet) behaviorSet.get()).initControls();
    }

    public SimpleIntegerProperty moneyProperty() {
        return money;
    }

    public int getMoney() {
        return money.get();
    }

    public void setMoney(int money) {
        this.money.set(money);
    }

    public void adjustMoney(int dMoney) {
        money.set(money.getValue() + dMoney);
    }

    public void setCurrentRoom(Room currentRoom) {
        this.owningRoom = currentRoom;
    }

    public MalwareType getMalwareType() {
        return malwareType;
    }

    public void recharge() {
        ((PlayerBehaviorSet) getBehaviorSet()).getSpecialAttackBehavior().recharge();
    }
}
