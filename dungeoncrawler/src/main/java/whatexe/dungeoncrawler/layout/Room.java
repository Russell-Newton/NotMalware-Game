package whatexe.dungeoncrawler.layout;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.embed.swing.SwingFXUtils;
import javafx.scene.image.Image;
import whatexe.dungeoncrawler.entities.Door;
import whatexe.dungeoncrawler.entities.Enemy;
import whatexe.dungeoncrawler.entities.Entity;
import whatexe.dungeoncrawler.entities.Player;
import whatexe.tileengine.TiledMap;

import java.util.ArrayList;
import java.util.List;

public abstract class Room {
    /*
    TODO - For Chase and Russell:
        - Allow creation from a TiledMap, including background image and ObjectGroups.
        - Consider creating inner enum or subclasses (make Room abstract) for Room types.
     */

    protected Image backgroundImage;
    protected List<Entity> entities;
    protected Level owningLevel;
    protected TiledMap fromTiledMap;
    protected List<Door> doors;
    protected ObservableList<Enemy> enemies;
    protected Player player;

    public Room(TiledMap fromTiledMap, Level owningLevel, Direction... directionsToGenerate) {
        if (fromTiledMap == null) {
            this.backgroundImage = null;
        } else {
            this.backgroundImage = SwingFXUtils.toFXImage(fromTiledMap.getMapImage(), null);
        }
        this.entities = new ArrayList<>();
        this.owningLevel = owningLevel;
        this.fromTiledMap = fromTiledMap;
        this.doors = new ArrayList<>();
        this.enemies = FXCollections.observableArrayList();
        this.player = null;


        if (fromTiledMap != null) {
            initDoors(directionsToGenerate);
            initEntities();
        }
    }

    protected abstract void initDoors(Direction[] directionsToGenerate);

    /**
     * Populate the {@link Room#entities} list.
     */
    protected abstract void initEntities();

    public List<Entity> getEntities() {
        return entities;
    }

    public List<Door> getDoors() {
        return doors;
    }

    public ObservableList<Enemy> getEnemies() {
        return enemies;
    }

    public Player getPlayer() {
        return player;
    }

    public void setPlayer(Player player) {
        this.player = player;
    }
}
