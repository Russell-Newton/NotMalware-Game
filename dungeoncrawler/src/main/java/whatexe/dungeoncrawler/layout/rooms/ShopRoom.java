package whatexe.dungeoncrawler.layout.rooms;

import javafx.scene.shape.Rectangle;
import whatexe.dungeoncrawler.entities.EntityChooser;
import whatexe.dungeoncrawler.entities.behavior.overlap.DoNothingOverlapBehavior;
import whatexe.dungeoncrawler.entities.behavior.overlap.ItemCaseOverlapBehavior;
import whatexe.dungeoncrawler.entities.items.Currency;
import whatexe.dungeoncrawler.entities.items.Item;
import whatexe.dungeoncrawler.layout.Direction;
import whatexe.dungeoncrawler.layout.Level;
import whatexe.tileengine.TiledMap;

import java.util.List;
import java.util.stream.Collectors;

public class ShopRoom extends SimpleRoom {
    public ShopRoom(TiledMap fromTiledMap,
                    Level owningLevel,
                    Direction... exitDirections) {
        super(fromTiledMap, owningLevel, exitDirections);
        hasVisited = true;
    }

    @Override
    protected void initEntities() {
        /*
         TODO - Add items, ensuring that they cannot be picked up without proper payment this
                could be done by creating an Entity that wraps an item and blocks overlap unless
                the player has enough money, and when the overlap happens, charge the player and
                give them the item
         */
        List<Rectangle> spawningRegions =
                fromTiledMap.getObjectGroups().get("Items").getObjects().stream()
                            .map(mapObject -> new Rectangle(
                                    mapObject.getX(),
                                    mapObject.getY(),
                                    mapObject.getWidth(),
                                    mapObject.getHeight()))
                            .collect(Collectors.toList());
        for (Rectangle spawnRegion : spawningRegions) {
            Item item = null;
            while (item == null || item instanceof Currency) {
                item = EntityChooser.getInstance()
                                    .getRandomItem(this, true);
            }
            miscEntities.add(item);
            item.setEntityPosition(spawnRegion.getX(),
                                   spawnRegion.getY());
            item.getBehaviorSet().setOverlapBehavior(new ItemCaseOverlapBehavior(item));
        }
    }
}
